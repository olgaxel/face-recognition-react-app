{"ast":null,"code":"var _jsxFileName = \"/Users/olga.brangeon/Desktop/git/face-recognition-app/smart-brain-react-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Facerecognition from \"./components/Facerecognition/Facerecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport './App.css';\nimport ParticleCanvas from \"./components/ParticleCanvas/ParticleCanvas\"; //let input = \"\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: \"\",\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      //input = event.target.value;\n      //console.log(input);\n      this.setState({\n        input: event.target.value\n      });\n      console.log(this.state.input);\n    };\n\n    this.onButtonSubmit = () => {\n      fetch('hhttps://stark-badlands-27897.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://stark-badlands-27897.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          isSignedIn: false\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState; //imageUrl:\"\"\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      box,\n      input\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticleCanvas, {\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Facerecognition, {\n          box: box,\n          imgUrl: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 8\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/olga.brangeon/Desktop/git/face-recognition-app/smart-brain-react-app/src/App.js"],"names":["React","Component","Navigation","Logo","Rank","ImageLinkForm","Facerecognition","SignIn","Register","ParticleCanvas","initialState","input","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","console","log","state","onButtonSubmit","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Facerecognition from \"./components/Facerecognition/Facerecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport './App.css';\nimport ParticleCanvas from \"./components/ParticleCanvas/ParticleCanvas\";\n\n\n//let input = \"\";\nconst initialState = {\n  input:\"\",\n      box:{},\n      route:'signin',\n      isSignedIn: false,\n      user:{\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n};\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState;\n      //imageUrl:\"\"\n    }\n  \n\nloadUser=(data)=>{\n  this.setState({user:{\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n  }})\n}\n\n  /* componentDidMount(){\n    fetch('http://localhost:3000/').then(response=> response.json())\n    .then(console.log);\n  } */\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height -(clarifaiFace.bottom_row * height)\n    }\n  }\n    displayFaceBox = (box) => {\n      this.setState({box:box});\n    }\n\n\n  onInputChange = (event)=>{\n    //input = event.target.value;\n    //console.log(input);\n    this.setState({input:event.target.value});\n    console.log(this.state.input);\n  }\n\n  onButtonSubmit =()=>{\n    fetch('hhttps://stark-badlands-27897.herokuapp.com/imageurl', {\n            method:'post',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                input :this.state.input,\n            })})\n            .then(response => response.json())\n    .then(response =>{\n      if(response){\n        fetch('https://stark-badlands-27897.herokuapp.com/image', {\n            method:'put',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id :this.state.user.id,\n            })})\n            .then(response => response.json())\n            .then(count =>{ \n              this.setState(Object.assign(this.state.user,{entries:count}))\n            }).catch(console.log)\n        \n      }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }\n    ).catch(err => console.log(err));\n\n  }\n\n  onRouteChange=(route)=>{\n    \n    if(route ==='signout'){\n      this.setState(initialState);\n    } else if (route === 'home'){\n      this.setState({isSignedIn:true})\n    } else{\n      this.setState({isSignedIn:false});\n    }\n    this.setState({route : route});\n      \n  }\n\n\n  render(){\n   const {isSignedIn, route, box, input} = this.state;\n  return (\n    <div className=\"App\">\n      <ParticleCanvas className=\"particles\"/>\n      <Navigation onRouteChange={this.onRouteChange} isSignedIn ={isSignedIn}/>\n      {route === 'home' \n      ?<div>\n      <Logo />\n      <Rank name = {this.state.user.name} entries ={this.state.user.entries}/>\n      <ImageLinkForm onInputChange={this.onInputChange}\n      onButtonSubmit ={this.onButtonSubmit}/>\n      <Facerecognition box = {box} imgUrl = {input} />\n    </div>\n      :(\n      route ==='signin'\n      ?<SignIn onRouteChange= {this.onRouteChange} loadUser = {this.loadUser}/> \n      :<Register onRouteChange= {this.onRouteChange} \n      loadUser = {this.loadUser}\n      />\n      )\n      }\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}