{"ast":null,"code":"var _jsxFileName = \"/Users/olga.brangeon/Desktop/git/facerecognishion/facerecognishionbrain/src/App.js\";\nimport React, { Component } from \"react\";\nimport Clarifai from 'clarifai';\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Facerecognition from \"./components/Facerecognition/Facerecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport './App.css';\nimport ParticleCanvas from \"./components/ParticleCanvas/ParticleCanvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'ac51797c8c34431b84ddfaace46b9d46'\n}); //let input = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      //input = event.target.value;\n      //console.log(input);\n      this.setState({\n        input: event.target.value\n      });\n      console.log(this.state.input);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.isSignedIn = () => {\n      debugger;\n\n      if (this.state.route === 'home') {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.state = {\n      input: \"\",\n      box: {},\n      route: 'signin' //imageUrl:\"\"\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticleCanvas, {\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Facerecognition, {\n          box: this.state.box,\n          imgUrl: this.state.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/olga.brangeon/Desktop/git/facerecognishion/facerecognishionbrain/src/App.js"],"names":["React","Component","Clarifai","Navigation","Logo","Rank","ImageLinkForm","Facerecognition","SignIn","Register","ParticleCanvas","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","value","state","onButtonSubmit","imageUrl","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Clarifai from 'clarifai';\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Facerecognition from \"./components/Facerecognition/Facerecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport './App.css';\nimport ParticleCanvas from \"./components/ParticleCanvas/ParticleCanvas\";\n\nconst app = new Clarifai.App({\n  apiKey:'ac51797c8c34431b84ddfaace46b9d46'\n});\n//let input = \"\";\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input:\"\",\n      box:{},\n      route:'signin'\n      //imageUrl:\"\"\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height -(clarifaiFace.bottom_row * height)\n    }\n  }\n    displayFaceBox = (box) => {\n      console.log(box)\n;      this.setState({box:box});\n    }\n\n\n  onInputChange = (event)=>{\n    //input = event.target.value;\n    //console.log(input);\n    this.setState({input:event.target.value});\n    console.log(this.state.input);\n  }\n\n  onButtonSubmit =()=>{\n    this.setState({imageUrl:this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response =>{\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }\n    ).catch(err => console.log(err));\n\n  }\n\n  onRouteChange=(route)=>{\n    this.setState({route : route});\n  }\n\n  isSignedIn=()=>{\n    debugger;\n    if(this.state.route ==='home'){\n      return true;\n    }\n    \n      return false;\n    \n  }\n\n  render(){\n\n  return (\n    <div className=\"App\">\n      <ParticleCanvas className=\"particles\"/>\n      <Navigation onRouteChange={this.onRouteChange} isSignedIn ={this.isSignedIn}/>\n      {this.state.route === 'home' ?\n      <div>\n      <Logo />\n      <Rank />\n      <ImageLinkForm onInputChange={this.onInputChange}\n      onButtonSubmit ={this.onButtonSubmit}/>\n      <Facerecognition box = {this.state.box} imgUrl = {this.state.input} />\n    </div>\n    :(\n      this.state.route ==='signin'?\n      <SignIn onRouteChange= {this.onRouteChange}/> :\n      <Register onRouteChange= {this.onRouteChange} />\n    )\n      \n      \n      }\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}